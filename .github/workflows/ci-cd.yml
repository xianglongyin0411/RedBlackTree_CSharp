name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  unit-tests:
    name: Run Unit Tests
    runs-on: self-hosted
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore dependencies
        run: dotnet restore UnitTest/UnitTest.csproj
        shell: cmd

      - name: Run unit tests
        run: dotnet test UnitTest/UnitTest.csproj --logger "trx;LogFileName=UnitTest/TestResults/test-results.trx"
        shell: cmd

      - name: Upload test results
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: UnitTest/TestResults/*.trx

  test-report:
    name: Generate Test Report
    needs: unit-tests
    runs-on: self-hosted
    steps:
      # dorny/test-reporter@afe6793191b75b608954023a46831a3fe10048d4
      - name: Generate test report
        uses: dorny/test-reporter@31a54ee7ebcacc03a09ea97a7e5465a47b84aea5
        with:
          artifact: test-results
          name: Unit Test Report
          path: 'UnitTest/TestResults/*.trx'
          reporter: dotnet-trx
# name: CI Pipeline

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   unit-tests:
#     name: Run Unit Tests
#     runs-on: self-hosted

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Restore dependencies
#         run: dotnet restore UnitTest/UnitTest.csproj
#         shell: cmd

  # performance-tests:
  #   name: Run Performance Tests
  #   runs-on: self-hosted

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Restors dependencies
  #       run: dotnet restore PerformanceTest/PerformanceTest.csproj
  #       shell: cmd
        
  #     - name: Run Performance Tests
  #       run: dotnet run --project PerformanceTest/PerformanceTest.csproj --configuration Release
  #       shell: cmd